[{"C:\\Users\\DELL\\ReactProjects\\React_Note\\src\\index.js":"1","C:\\Users\\DELL\\ReactProjects\\React_Note\\src\\reportWebVitals.js":"2","C:\\Users\\DELL\\ReactProjects\\React_Note\\src\\Components\\Set_state.js":"3","C:\\Users\\DELL\\ReactProjects\\React_Note\\src\\Components\\Purchase.js":"4","C:\\Users\\DELL\\ReactProjects\\React_Note\\src\\Components\\Data_fetch_file.js":"5","C:\\Users\\DELL\\ReactProjects\\React_Note\\src\\Components\\Sales.js":"6","C:\\Users\\DELL\\ReactProjects\\React_Note\\src\\Component\\New_sale_purchase.js":"7","C:\\Users\\DELL\\ReactProjects\\React_Note\\src\\Components\\BalanceSheet.js":"8","C:\\Users\\DELL\\ReactProjects\\React_Note\\src\\Components\\NavBar.js":"9","C:\\Users\\DELL\\ReactProjects\\React_Note\\src\\Components\\Use.js":"10","C:\\Users\\DELL\\ReactProjects\\React_Note\\src\\Components\\Data_passed_file.js":"11","C:\\Users\\DELL\\ReactProjects\\React_Note\\src\\Component\\New_balance.js":"12","C:\\Users\\DELL\\ReactProjects\\React_Note\\src\\Components\\antform.js":"13","C:\\Users\\DELL\\ReactProjects\\React_Note\\src\\Components\\antnav.js":"14","C:\\Users\\DELL\\ReactProjects\\React_Note\\src\\Components\\home.js":"15","C:\\Users\\DELL\\ReactProjects\\React_Note\\src\\Components\\antfooter.js":"16","C:\\Users\\DELL\\ReactProjects\\React_Note\\src\\Components\\antSales.js":"17","C:\\Users\\DELL\\ReactProjects\\React_Note\\src\\Components\\antPurchase.js":"18"},{"size":1921,"mtime":1612006789743,"results":"19","hashOfConfig":"20"},{"size":375,"mtime":1611901028102,"results":"21","hashOfConfig":"20"},{"size":1030,"mtime":1611901028096,"results":"22","hashOfConfig":"20"},{"size":5016,"mtime":1611907969082,"results":"23","hashOfConfig":"20"},{"size":739,"mtime":1611901028088,"results":"24","hashOfConfig":"20"},{"size":4309,"mtime":1612002508279,"results":"25","hashOfConfig":"20"},{"size":1642,"mtime":1611901028084,"results":"26","hashOfConfig":"20"},{"size":273,"mtime":1611907878774,"results":"27","hashOfConfig":"20"},{"size":893,"mtime":1611901028092,"results":"28","hashOfConfig":"20"},{"size":548,"mtime":1611901028097,"results":"29","hashOfConfig":"20"},{"size":572,"mtime":1611901028090,"results":"30","hashOfConfig":"20"},{"size":5131,"mtime":1611901028082,"results":"31","hashOfConfig":"20"},{"size":2236,"mtime":1611919199576,"results":"32","hashOfConfig":"20"},{"size":1509,"mtime":1612007880222,"results":"33","hashOfConfig":"20"},{"size":277,"mtime":1612011263902,"results":"34","hashOfConfig":"20"},{"size":622,"mtime":1612010168721,"results":"35","hashOfConfig":"20"},{"size":4666,"mtime":1612074818001,"results":"36","hashOfConfig":"20"},{"size":4482,"mtime":1612073547721,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"41"},"1l1jtki",{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"41"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"41"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"41"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"41"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"41"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"41"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"41"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"41"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"82","messages":"83","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"41"},"C:\\Users\\DELL\\ReactProjects\\React_Note\\src\\index.js",["85"],"import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\r\n\r\nimport Home from \"./Components/home\";\r\nimport Sales from \"./Components/Sales\";\r\nimport Purchase from \"./Components/Purchase\";\r\nimport NavBar from \"./Components/NavBar\";\r\nimport BalanceSheet from \"./Components/BalanceSheet\";\r\nimport Antfooter from \"./Components/antfooter\";\r\n\r\nimport Set_state from \"./Components/Set_state\";\r\nimport Data_fetch_file from \"./Components/Data_fetch_file\";\r\n\r\nimport New_sale_purchase from \"./Component/New_sale_purchase\";\r\n\r\nimport FormSizeDemo from \"./Components/antform\";\r\nimport AntNav from \"./Components/antnav\";\r\nimport AntSales from \"./Components/antSales\";\r\nimport AntPurchase from \"./Components/antPurchase\";\r\n\r\nReactDOM.render(\r\n  <div>\r\n    <BrowserRouter>\r\n      <AntNav />\r\n      <Switch>\r\n        <Route path=\"/new_sales_purchase\" component={New_sale_purchase} />\r\n\r\n        <Route path=\"/use\" component={Set_state} />\r\n        <Route path=\"/dff\" component={Data_fetch_file} />\r\n        <Route path=\"/Sales\" component={Sales} />\r\n        <Route path=\"/Purchase\" component={Purchase} />\r\n        <Route path=\"/Demo\" component={FormSizeDemo} />\r\n\r\n        <Route path=\"/antsales\" component={AntSales} />\r\n        <Route path=\"/antpurchase\" component={AntPurchase} />\r\n        <Route path=\"/bs\" component={() => <BalanceSheet text=\"apple\" />} />\r\n        <Route path=\"/\" component={Home} />\r\n\r\n        {/* <Route path=\"/bs\" component={BalanceSheet}/> */}\r\n      </Switch>\r\n    </BrowserRouter>\r\n    <Antfooter />\r\n  </div>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n",["86","87"],"C:\\Users\\DELL\\ReactProjects\\React_Note\\src\\reportWebVitals.js",[],"C:\\Users\\DELL\\ReactProjects\\React_Note\\src\\Components\\Set_state.js",[],"C:\\Users\\DELL\\ReactProjects\\React_Note\\src\\Components\\Purchase.js",["88","89","90"],"import React from \"react\";\r\nimport \"../CSS/Purchase.css\";\r\n\r\nclass Purchase extends React.Component {\r\n  state = {\r\n    purchase_item: \"\",\r\n    purchase_amount: \"\",\r\n    purchase_date: \"\",\r\n    purchase_data: [],\r\n  };\r\n\r\n  // componentDidMount(){\r\n  //     const apiUrl = 'http://127.0.0.1:8000/purchase/';\r\n  //     fetch(apiUrl)\r\n  //     .then((response)=>response.json())\r\n  //     .then((data)=> {\r\n  //         console.log('Purchase data from purchase tab',data)\r\n  //         this.setState({\r\n  //             purchase_data: data\r\n  //         })\r\n  //     })\r\n\r\n  // }\r\n\r\n  myPurchaseHandler = (event) => {\r\n    //console.log(event.target.value)\r\n    this.setState({\r\n      [event.target.name]: event.target.value,\r\n    });\r\n  };\r\n\r\n  purchaseFormValidation = () => {\r\n    let purchase_item_field = document.getElementById(\"pdemo\").value;\r\n    let purchase_amount_field = document.getElementById(\"pdemo1\").value;\r\n    let purchase_date_field = document.getElementById(\"pdemo2\").value;\r\n\r\n    let validation = true;\r\n\r\n    if (\r\n      purchase_item_field === \"\" ||\r\n      purchase_amount_field === \"\" ||\r\n      purchase_date_field === \"\"\r\n    ) {\r\n      console.log(\"Empty input field.\");\r\n      validation = false;\r\n    }\r\n    if (purchase_item_field.match(/\\d/)) {\r\n      console.log(\"Enter only Characters not numbers....\");\r\n      alert(\"Purchase item: Enter only Characters not numbers....\");\r\n      validation = false;\r\n    }\r\n    if (purchase_amount_field.match(/[a-z]/)) {\r\n      console.log(\"Enter only number not character....\");\r\n      alert(\"Purchase amount: Enter only number not character....\");\r\n      validation = false;\r\n    }\r\n    if (purchase_date_field.match(/^[0-9]{4}[/:|][0-9]{2}[/:|][0-9]{2}$/g)) {\r\n      console.log(\"Enter date in valid format....\");\r\n      alert(\" purchase date: Enter date in valid format....\");\r\n      validation = false;\r\n    }\r\n    // if(purchase_item_field.match(/\\d/) || purchase_amount_field.match(/[a-z]/) || purchase_date_field.match(/^[0-9]{4}[|:/][0-9]{2}[|:/][0-9]{2}[|:/]$/g)){\r\n    //     alert(\"Please enter valid credentials....\")\r\n    //     validation = false;\r\n    // }\r\n    return validation;\r\n  };\r\n\r\n  handleSubmit = (event) => {\r\n    const { purchase_item, purchase_amount, purchase_date } = this.state;\r\n    event.preventDefault();\r\n    let flag = this.purchaseFormValidation();\r\n\r\n    if (flag === false) return;\r\n\r\n    fetch(\"http://127.0.0.1:8000/pur/\", {\r\n      method: \"POST\",\r\n      body: JSON.stringify({\r\n        purchaseItem: purchase_item,\r\n        purchaseAmount: purchase_amount,\r\n        purchaseDate: purchase_date,\r\n      }),\r\n      headers: {\r\n        \"Content-Type\": \"application/json; charset = UTF-8\",\r\n      },\r\n    })\r\n      .then(() => {\r\n        this.setState({\r\n          purchase_item: \"\",\r\n          purchase_amount: \"\",\r\n          purchase_date: \"\",\r\n        });\r\n      })\r\n      .then(() => {\r\n        alert(\"Message successfully sent....\");\r\n      });\r\n  };\r\n\r\n  render() {\r\n    const css1 = {\r\n      justifyContent: \"center\",\r\n      marginLeft: \"35%\",\r\n      marginTop: \"2%\",\r\n    };\r\n\r\n    const css2 = {\r\n      marginLeft: \"35%\",\r\n      marginTop: \"4%\",\r\n    };\r\n\r\n    const css3 = {\r\n      marginTop: \"1%\",\r\n      marginBotton: \"1%\",\r\n      width: \"1000px\",\r\n    };\r\n\r\n    return (\r\n      <div id=\"purchase_div\" style={{ height: \"72vh\" }}>\r\n        <h1 id=\"Purchase_heading\">This is a purchase page.</h1>\r\n        <form\r\n          onSubmit={(e) => this.handleSubmit(e)}\r\n          id=\"Purchase_form\"\r\n          className=\"mb-3 row\"\r\n        >\r\n          <label id=\"purchase_labels\">\r\n            Purchase item:\r\n            <input\r\n              type=\"text\"\r\n              value={this.state.purchase_item}\r\n              onChange={this.myPurchaseHandler}\r\n              id=\"pdemo\"\r\n              className=\"form-control\"\r\n              name=\"purchase_item\"\r\n              placeholder=\"Enter purchase item\"\r\n            />\r\n          </label>\r\n          <br />\r\n          <label id=\"purchase_labels\">\r\n            Purchase amount:\r\n            <input\r\n              type=\"text\"\r\n              value={this.state.purchase_amount}\r\n              onChange={this.myPurchaseHandler}\r\n              id=\"pdemo1\"\r\n              className=\"form-control\"\r\n              name=\"purchase_amount\"\r\n              placeholder=\"Enter purchase amount\"\r\n            />\r\n          </label>\r\n          <br />\r\n          <label id=\"purchase_labels\">\r\n            Purchase Date:\r\n            <input\r\n              type=\"text\"\r\n              value={this.state.purchase_date}\r\n              onChange={this.myPurchaseHandler}\r\n              id=\"pdemo2\"\r\n              className=\"form-control\"\r\n              name=\"purchase_date\"\r\n              placeholder=\"yyyy-mm-dd\"\r\n            />\r\n          </label>\r\n          <br />\r\n          <br />\r\n          <br />\r\n          <br />\r\n          <input type=\"submit\" value=\"Submit\" className=\"btn btn-info btn-lg\" />\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Purchase;\r\n","C:\\Users\\DELL\\ReactProjects\\React_Note\\src\\Components\\Data_fetch_file.js",["91"],"import React ,{useState, useEffect} from 'react';\r\nimport Data_passed_file from './Data_passed_file';\r\n\r\nfunction Data_fetch_file(){\r\n\r\n    //USING A HOOK\r\n    const [fetchData, setData] = useState([{\r\n        id: '', sales_item: '', sales_amount:'', sales_date:''\r\n    }]);\r\n\r\n    \r\n    const loadData = async ()=>{\r\n        await fetch('http://127.0.0.1:8000/sales/')\r\n        .then(response=> response.json())\r\n        .then(response=>setData(response))\r\n    }\r\n    console.log(\"Data after fetching = \", fetchData)\r\n\r\n    useEffect(()=>{loadData();},[])\r\n\r\n    return(\r\n        <div>\r\n            <h1>This is Elon musk.</h1>\r\n            <Data_passed_file data={fetchData}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Data_fetch_file;","C:\\Users\\DELL\\ReactProjects\\React_Note\\src\\Components\\Sales.js",["92","93","94","95","96"],"import React from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"../CSS/Sales.css\";\r\nimport { Alert, Form, Space, DatePicker, Input } from \"antd\";\r\nimport \"antd/dist/antd.css\";\r\n\r\nclass Sales extends React.Component {\r\n  state = {\r\n    sales_item: \"\",\r\n    sales_amount: \"\",\r\n    sales_date: \"\",\r\n    sales_data: [],\r\n    total: 0,\r\n    visible: false,\r\n    sales_item_alert: \"ALERT: Enter only Characters not numbers....\",\r\n    alert: \"\",\r\n  };\r\n\r\n  //TO GET THE DATA DYNAMICALLY FROM THE INPUT FIELD\r\n  mySalseHandler = (event) => {\r\n    console.log(event.target.value);\r\n    this.setState({\r\n      [event.target.name]: event.target.value,\r\n    });\r\n  };\r\n\r\n  // FOR HANDLING FORM WHEN IT IS SUBMITTED\r\n  handleSubmit(event) {\r\n    event.preventDefault();\r\n    let flag = this.salesFormValidation(); // return either true or false\r\n\r\n    if (flag === false) return;\r\n\r\n    event.preventDefault();\r\n    const { sales_item, sales_amount, sales_date } = this.state;\r\n    fetch(\"http://127.0.0.1:8000/sale/\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json; charset = UTF-8\",\r\n      },\r\n      body: JSON.stringify({\r\n        salesItem: sales_item,\r\n        salesAmount: sales_amount,\r\n        salesDate: sales_date,\r\n      }),\r\n    })\r\n      .then((response) => response.json())\r\n      .then(() => {\r\n        this.setState({\r\n          sales_item: \"\",\r\n          sales_amount: \"\",\r\n          sales_date: \"\",\r\n        });\r\n      })\r\n      .then(() => {\r\n        alert(\"Message successfully sent....\");\r\n      });\r\n  }\r\n\r\n  render() {\r\n    const layout = {\r\n      labelCol: { span: 8 },\r\n      wrapperCol: { span: 16 },\r\n    };\r\n    const tailLayout = {\r\n      wrapperCol: { offset: 8, span: 16 },\r\n    };\r\n\r\n    return (\r\n      <div id=\"sales_div\" style={{ height: \"72vh\" }}>\r\n        {/* {this.state.alert && alert(this.state.alert)} */}\r\n        <h1 id=\"Sales_heading\">Please Enter Your Sale</h1>\r\n        <form\r\n          onSubmit={(e) => this.handleSubmit(e)}\r\n          id=\"Sales_form\"\r\n          className=\"mb-3 row\"\r\n        >\r\n          {/* <form onSubmit={handleSubmit} style={css2}>    */}\r\n          <label id=\"sales_labels\">\r\n            Sales item\r\n            <input\r\n              required\r\n              type=\"text\"\r\n              id=\"sdemo\"\r\n              value={this.state.sales_item}\r\n              name=\"sales_item\"\r\n              onChange={this.mySalseHandler}\r\n              className=\"form-control\"\r\n              placeholder=\"Enter sales item\"\r\n            />\r\n            {/* <span id=\"sales_item_span\" className=\"text-danger font-weight-bold\"></span> */}\r\n          </label>\r\n          <br />\r\n          <label id=\"sales_labels\">\r\n            Sales amount\r\n            <input\r\n              required\r\n              type=\"number\"\r\n              id=\"sdemo1\"\r\n              value={this.state.sales_amount}\r\n              name=\"sales_amount\"\r\n              onChange={this.mySalseHandler}\r\n              className=\"form-control\"\r\n              placeholder=\"Enter sales amount\"\r\n            />\r\n            {/* <span id=\"sales_amount_span\" className=\"text-danger font-weight-bold\"></span> */}\r\n          </label>\r\n          <br />\r\n          <label id=\"sales_labels\">\r\n            Sales Date\r\n            {/* <input\r\n              required\r\n              type=\"text\"\r\n              id=\"sdemo2\"\r\n              value={this.state.sales_date}\r\n              name=\"sales_date\"\r\n              onChange={this.mySalseHandler}\r\n              placeholder=\"yyyy-mm-dd\"\r\n              className=\"form-control\"\r\n            /> */}\r\n            <Form.Item>\r\n              <DatePicker\r\n                id=\"sdemo2\"\r\n                name=\"sales_date\"\r\n                value={this.state.sales_date}\r\n                onChange={this.mySalseHandler}\r\n                placeholder=\"yyyy-mm-dd\"\r\n              />\r\n            </Form.Item>\r\n            {/* <span id=\"sales_date_span\" className=\"text-danger font-weight-bold\"></span> */}\r\n          </label>\r\n\r\n          <br />\r\n          <br />\r\n          <br />\r\n          <br />\r\n          <input\r\n            type=\"submit\"\r\n            value=\"Submit\"\r\n            id=\"myBtn\"\r\n            className=\"btn btn-info btn-lg\"\r\n          />\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Sales;\r\n","C:\\Users\\DELL\\ReactProjects\\React_Note\\src\\Component\\New_sale_purchase.js",["97","98"],"import React,{useState, useEffect} from 'react';\r\nimport New_balance from './New_balance';\r\n\r\n\r\nfunction New_sale_purchase(){\r\n\r\n    //######################## SALES SECTION STARTS HERE #########################################\r\n    const[sales_Data, setData] = useState([{\r\n        id:'',\r\n        sales_item:'',\r\n        sales_amount:'',\r\n        sales_date:''\r\n    }])\r\n\r\n    const loadData = async()=>{\r\n        await fetch('http://127.0.0.1:8000/sale/')\r\n            .then(response=>response.json())\r\n                .then(response=>setData(response))\r\n                    console.log(\"Test sales = \", sales_Data);          \r\n    }\r\n    //console.log(\"Test sales = \", sales_Data);\r\n\r\n    useEffect(()=>{loadData();}, []);\r\n    //######################## SALES SECTION ENDS HERE #########################################\r\n\r\n    //######################## PURCHASE SECTION STARTS HERE #########################################\r\n    const[purchase_Data, setPData] = useState([{\r\n        id:'',\r\n        purchase_item:'',\r\n        purchase_amount:'',\r\n        purchase_date:''\r\n    }])\r\n\r\n    const loadPData = async()=>{\r\n        await fetch('http://127.0.0.1:8000/pur/')\r\n            .then(response=>response.json())\r\n                .then(response=>setPData(response))\r\n    }\r\n    //console.log(\"Test purchase = \", purchase_Data);\r\n   \r\n    useEffect(()=>{loadPData();}, []);\r\n    //######################## PURCHASE SECTION ENDS HERE #########################################\r\n\r\n    return(\r\n        <div>\r\n            <New_balance data={sales_Data} pdata={purchase_Data}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default New_sale_purchase;","C:\\Users\\DELL\\ReactProjects\\React_Note\\src\\Components\\BalanceSheet.js",[],"C:\\Users\\DELL\\ReactProjects\\React_Note\\src\\Components\\NavBar.js",[],"C:\\Users\\DELL\\ReactProjects\\React_Note\\src\\Components\\Use.js",[],"C:\\Users\\DELL\\ReactProjects\\React_Note\\src\\Components\\Data_passed_file.js",[],"C:\\Users\\DELL\\ReactProjects\\React_Note\\src\\Component\\New_balance.js",["99","100"],"import React from 'react';\r\nimport '../CSS/BalanceSheet.css'\r\n\r\nfunction New_balance(props){\r\n    console.log(\"Passed props = \",props)\r\n    console.log(\"Passed sales props = \",props.data)\r\n    console.log(\"Passed purchase props = \",props.pdata)\r\n    \r\n    let sales_total = 0;\r\n    props.data.map((sdata)=>{\r\n       return sales_total += sdata.salesAmount\r\n    })\r\n    console.log(\"Sales total = \", sales_total)\r\n\r\n    let purchase_total = 0;\r\n    props.pdata.map((pur_data)=>{\r\n        return purchase_total += pur_data.purchaseAmount\r\n    })\r\n    console.log(\"Purchase total = \", purchase_total)\r\n\r\n    // let total = 0;\r\n    // props.data.map((item)=>{\r\n    //     return total += item.sales_amount   \r\n    // })\r\n    // console.log(\"New API sales total = \", total)\r\n\r\n    // let ptotal = 0;\r\n    // props.pdata.map((item)=>{\r\n    //     return ptotal += item.purchase_amount\r\n    // })\r\n    // console.log(\"New API purchase total = \", ptotal)\r\n\r\n\r\n    let message = \"\";\r\n    if(sales_total>purchase_total){\r\n        message = \"Profit\";\r\n    }else if(sales_total<purchase_total){\r\n        message = \"Loss\";\r\n    }else{\r\n        message=\"Equal\";\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            {/* <div id=\"Balance_sheet\">            \r\n                <h1 id=\"total_sales\">Total sales = {sales_total}</h1> \r\n            </div>\r\n            <div><h1 id=\"total_purchase\">Total purchase = {purchase_total}</h1></div>\r\n            <div> <h1 id=\"result\">{message}</h1> </div> */}\r\n\r\n            <div className=\"row\">\r\n                <div className=\"col-sm\"><h1 id=\"total_sales\">Total sales = {sales_total}</h1></div>\r\n                <div className=\"col-sm\"><h1 id=\"result\">{message}</h1> </div>\r\n                <div className=\"col-sm\"><h1 id=\"total_purchase\">Total purchase = {purchase_total}</h1></div>\r\n            </div>\r\n\r\n            <div className=\"row\">\r\n                <div className=\"col-sm\">\r\n                {/* //################################# SALES TABLE STARTS HERE #######################################################    */}\r\n                    <div>\r\n                        <table className=\"table\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>Sales ID</th>\r\n                                    <th>Sales Items</th>\r\n                                    <th>Sales Amount</th>\r\n                                    <th>Sales Date</th>\r\n                                </tr>\r\n                            </thead>\r\n                        \r\n                        {props.data.map((sitem)=>{\r\n                            {console.log(sitem)}\r\n                        return( \r\n                                <tbody key={sitem.id}>\r\n                                    <tr>\r\n                                        <td>{sitem.id}</td>\r\n                                        <td>{sitem.salesItem}</td>\r\n                                        <td>{sitem.salesAmount}</td>\r\n                                        <td>{sitem.salesDate}</td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            \r\n                        )\r\n                        })}\r\n                        </table>\r\n                    </div>  \r\n            {/* //#################################### SALES TABLE ENDS HERE #######################################################   */}\r\n                </div>\r\n                <div className=\"col-sm\">\r\n                {/* //#################################### PURCHASE TABLE ENDS HERE #######################################################   */}\r\n                <div>\r\n                        <table className=\"table\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>Purchase ID</th>\r\n                                    <th>Purchase Items</th>\r\n                                    <th>Purchase Amount</th>\r\n                                    <th>Purchase Date</th>\r\n                                </tr>\r\n                            </thead>\r\n                        \r\n                        {props.pdata.map((pitem)=>{\r\n                            {console.log(pitem)}\r\n                        return( \r\n                                <tbody key={pitem.id}>\r\n                                    <tr>\r\n                                        <td>{pitem.id}</td>\r\n                                        <td>{pitem.purchaseItem}</td>\r\n                                        <td>{pitem.purchaseAmount}</td>\r\n                                        <td>{pitem.purchaseDate}</td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            \r\n                        )\r\n                        })}\r\n                        </table>\r\n                    </div>  \r\n                \r\n                {/* //#################################### PURCHASE TABLE ENDS HERE #######################################################  */}\r\n                </div>\r\n            </div>    \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default New_balance;","C:\\Users\\DELL\\ReactProjects\\React_Note\\src\\Components\\antform.js",["101"],"import React, { useState } from \"react\";\r\nimport {\r\n  Form,\r\n  Input,\r\n  Button,\r\n  Radio,\r\n  Select,\r\n  Cascader,\r\n  DatePicker,\r\n  InputNumber,\r\n  TreeSelect,\r\n  Switch,\r\n} from \"antd\";\r\nimport \"antd/dist/antd.css\";\r\nconst FormSizeDemo = () => {\r\n  const [componentSize, setComponentSize] = useState(\"default\");\r\n\r\n  const onFormLayoutChange = ({ size }) => {\r\n    setComponentSize(size);\r\n  };\r\n\r\n  return (\r\n    <div className=\"container p-4\">\r\n      <Form\r\n        labelCol={{\r\n          span: 4,\r\n        }}\r\n        wrapperCol={{\r\n          span: 14,\r\n        }}\r\n        layout=\"horizontal\"\r\n        initialValues={{\r\n          size: componentSize,\r\n        }}\r\n        onValuesChange={onFormLayoutChange}\r\n        size={componentSize}\r\n      >\r\n        <Form.Item label=\"Input\">\r\n          <Input />\r\n        </Form.Item>\r\n        <Form.Item label=\"Select\">\r\n          <Select>\r\n            <Select.Option value=\"demo\">Demo</Select.Option>\r\n          </Select>\r\n        </Form.Item>\r\n        <Form.Item label=\"TreeSelect\">\r\n          <TreeSelect\r\n            treeData={[\r\n              {\r\n                title: \"Light\",\r\n                value: \"light\",\r\n                children: [\r\n                  {\r\n                    title: \"Bamboo\",\r\n                    value: \"bamboo\",\r\n                  },\r\n                ],\r\n              },\r\n            ]}\r\n          />\r\n        </Form.Item>\r\n        <Form.Item label=\"Cascader\">\r\n          <Cascader\r\n            options={[\r\n              {\r\n                value: \"zhejiang\",\r\n                label: \"Zhejiang\",\r\n                children: [\r\n                  {\r\n                    value: \"hangzhou\",\r\n                    label: \"Hangzhou\",\r\n                  },\r\n                ],\r\n              },\r\n            ]}\r\n          />\r\n        </Form.Item>\r\n        <Form.Item label=\"DatePicker\">\r\n          <DatePicker />\r\n        </Form.Item>\r\n        <Form.Item label=\"InputNumber\">\r\n          <InputNumber />\r\n        </Form.Item>\r\n        <Form.Item label=\"Switch\">\r\n          <Switch />\r\n        </Form.Item>\r\n        <Form.Item label=\"Button\">\r\n          <Button>Button</Button>\r\n        </Form.Item>\r\n      </Form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FormSizeDemo;\r\n","C:\\Users\\DELL\\ReactProjects\\React_Note\\src\\Components\\antnav.js",["102","103","104"],"import React from \"react\";\r\nimport { Layout, Menu, Breadcrumb } from \"antd\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"antd/dist/antd.css\";\r\nimport \"./antnav.css\";\r\n\r\nconst { Header, Content, Footer } = Layout;\r\nconst Antnav = () => {\r\n  return (\r\n    <div>\r\n      <Layout className=\"layout\">\r\n        <Header>\r\n          <Menu theme=\"dark\" mode=\"horizontal\">\r\n            <Menu.Item key=\"/\">\r\n              <Link to=\"/\">Techrida</Link>\r\n            </Menu.Item>\r\n            <Menu.Item key=\"/antsales\" style={{ float: \"right\" }}>\r\n              <Link to=\"/antsales\">Sales</Link>\r\n            </Menu.Item>\r\n            <Menu.Item key=\"/antpurchase\" style={{ float: \"right\" }}>\r\n              <Link to=\"/antpurchase\">Purchase</Link>\r\n            </Menu.Item>\r\n            <Menu.Item key=\"/bs\" style={{ float: \"right\" }}>\r\n              <Link to=\"/bs\">BalanceSheet</Link>\r\n            </Menu.Item>\r\n          </Menu>\r\n        </Header>\r\n        {/* <Content style={{ padding: \"0 50px\" }}>\r\n          <Breadcrumb style={{ margin: \"16px 0\" }}>\r\n            <Breadcrumb.Item>Home</Breadcrumb.Item>\r\n            <Breadcrumb.Item>List</Breadcrumb.Item>\r\n            <Breadcrumb.Item>App</Breadcrumb.Item>\r\n          </Breadcrumb>\r\n          <div className=\"site-layout-content\">Content</div>\r\n        </Content>\r\n        <Footer style={{ textAlign: \"center\" }}>\r\n          BALANCE SHEET©2021 Created by Techrida Inc.\r\n        </Footer> */}\r\n      </Layout>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Antnav;\r\n","C:\\Users\\DELL\\ReactProjects\\React_Note\\src\\Components\\home.js",[],"C:\\Users\\DELL\\ReactProjects\\React_Note\\src\\Components\\antfooter.js",["105","106","107","108"],"import React from \"react\";\r\nimport { Layout, Menu, Breadcrumb } from \"antd\";\r\n\r\nimport \"antd/dist/antd.css\";\r\nimport \"./antnav.css\";\r\n\r\nconst { Header, Content, Footer } = Layout;\r\n\r\nconst Antfooter = () => {\r\n  return (\r\n    <div>\r\n      <Layout className=\"layout\">\r\n        <Footer\r\n          style={{\r\n            textAlign: \"center\",\r\n            backgroundColor: \"#001529\",\r\n          }}\r\n        >\r\n          <p className=\"\" style={{ color: \"white\" }}>\r\n            RecordKeeping ©2021 Created by Techrida Inc.\r\n          </p>\r\n        </Footer>\r\n      </Layout>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Antfooter;\r\n","C:\\Users\\DELL\\ReactProjects\\React_Note\\src\\Components\\antSales.js",["109","110","111","112"],"C:\\Users\\DELL\\ReactProjects\\React_Note\\src\\Components\\antPurchase.js",["113","114","115","116"],"import React from \"react\";\r\nimport { Form, Input, InputNumber, Button, DatePicker } from \"antd\";\r\nimport \"antd/dist/antd.css\";\r\n\r\nclass antPurchase extends React.Component {\r\n  state = {\r\n    purchase_item: \"\",\r\n    purchase_amount: \"\",\r\n    purchase_date: \"\",\r\n    purchase_data: [],\r\n    total: 0,\r\n    visible: false,\r\n  };\r\n\r\n  //TO GET THE DATA DYNAMICALLY FROM THE INPUT FIELD\r\n  myPurchaseHandler = (event) => {\r\n    console.log(event);\r\n    this.setState({\r\n      [event.target.name]: event.target.value,\r\n    });\r\n  };\r\n  myDateHandler = (date) => {\r\n    console.log(date);\r\n    console.log(date?._d);\r\n    const d = date?.format(\"YYYY-MM-DD\");\r\n    console.log(d);\r\n    this.state.purchase_date = d;\r\n    // this.setState({\r\n    //   [date.target.name]: date.target.value,\r\n    // });\r\n  };\r\n\r\n  // FOR HANDLING FORM WHEN IT IS SUBMITTED\r\n  handleSubmit = (e) => {\r\n    // let flag = this.salesFormValidation(); // return either true or false\r\n\r\n    // if (flag === false) return;\r\n    console.log(\"clicked\");\r\n    const { purchase_item, purchase_amount, purchase_date } = this.state;\r\n    console.log(purchase_item);\r\n    console.log(purchase_amount);\r\n    console.log(purchase_date);\r\n    fetch(\"http://127.0.0.1:8000/pur/\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json; charset = UTF-8\",\r\n      },\r\n      body: JSON.stringify({\r\n        purchaseItem: purchase_item,\r\n        purchaseAmount: purchase_amount,\r\n        purchaseDate: purchase_date,\r\n      }),\r\n    })\r\n      .then((response) => response.json())\r\n      .then(() => {\r\n        this.setState({\r\n          purchase_item: \"\",\r\n          purchase_amount: \"\",\r\n          purchase_date: \"\",\r\n        });\r\n      })\r\n      .then(() => {\r\n        alert(\"Message successfully sent....\");\r\n      });\r\n  };\r\n\r\n  render() {\r\n    const validateMessages = {\r\n      required: \"${label} is required!\",\r\n      types: {\r\n        number: \"${label} is not a valid number!\",\r\n        regex: \"[A-Za-z]\",\r\n      },\r\n    };\r\n    const layout = {\r\n      labelCol: {\r\n        span: 10,\r\n      },\r\n      wrapperCol: {\r\n        span: 16,\r\n      },\r\n    };\r\n    return (\r\n      <div\r\n        className=\"container p-5\"\r\n        style={{ height: \"535px\", marginTop: \"70px\" }}\r\n      >\r\n        <h4 className=\"text-center\">Enter Your Purchase</h4>\r\n        <Form\r\n          {...layout}\r\n          className=\"container my-5 \"\r\n          name=\"nest-messages\"\r\n          validateMessages={validateMessages}\r\n          onFinish={(e) => this.handleSubmit(e)}\r\n          id=\"Purchase_form\"\r\n        >\r\n          <Form.Item\r\n            name={[\"Item\"]}\r\n            label=\"Purchase Item\"\r\n            rules={[\r\n              {\r\n                required: true,\r\n                pattern: \"^[a-zA-Z]+$\",\r\n                message: \"Purchase Item should be in characters\",\r\n              },\r\n            ]}\r\n          >\r\n            <Input\r\n              style={{ width: \"150px\" }}\r\n              name=\"purchase_item\"\r\n              value={this.state.purchase_item}\r\n              onChange={this.myPurchaseHandler}\r\n            />\r\n          </Form.Item>\r\n          <Form.Item\r\n            name={[\"Amount\"]}\r\n            label=\"Purchase Amount\"\r\n            value={this.state.purchase_amount}\r\n            onChange={this.myPurchaseHandler}\r\n            rules={[\r\n              {\r\n                required: true,\r\n                pattern: \"^[0-9]+$\",\r\n                message: \"Purchase Amount shoud be in numbers only\",\r\n              },\r\n            ]}\r\n          >\r\n            <Input\r\n              style={{ width: \"150px\" }}\r\n              name=\"purchase_amount\"\r\n\r\n              // value={this.state.sales_amount}\r\n              // onChange={this.mySalseHandler}\r\n            />\r\n          </Form.Item>\r\n\r\n          <Form.Item\r\n            name={[\"Date\"]}\r\n            label=\"Date\"\r\n            rules={[\r\n              {\r\n                required: true,\r\n              },\r\n            ]}\r\n          >\r\n            <DatePicker\r\n              style={{ width: \"150px\" }}\r\n              name=\"purchase_date\"\r\n              dateFormat=\"MM/dd/yyyy\"\r\n              onChange={this.myDateHandler}\r\n            />\r\n          </Form.Item>\r\n\r\n          <Form.Item wrapperCol={{ ...layout.wrapperCol, offset: 10 }}>\r\n            <Button type=\"primary\" htmlType=\"submit\">\r\n              Submit\r\n            </Button>\r\n          </Form.Item>\r\n        </Form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default antPurchase;\r\n",{"ruleId":"117","severity":1,"message":"118","line":9,"column":8,"nodeType":"119","messageId":"120","endLine":9,"endColumn":14},{"ruleId":"121","replacedBy":"122"},{"ruleId":"123","replacedBy":"124"},{"ruleId":"117","severity":1,"message":"125","line":100,"column":11,"nodeType":"119","messageId":"120","endLine":100,"endColumn":15},{"ruleId":"117","severity":1,"message":"126","line":106,"column":11,"nodeType":"119","messageId":"120","endLine":106,"endColumn":15},{"ruleId":"117","severity":1,"message":"127","line":111,"column":11,"nodeType":"119","messageId":"120","endLine":111,"endColumn":15},{"ruleId":"128","severity":1,"message":"129","line":24,"column":13,"nodeType":"130","endLine":24,"endColumn":49},{"ruleId":"117","severity":1,"message":"131","line":4,"column":10,"nodeType":"119","messageId":"120","endLine":4,"endColumn":15},{"ruleId":"117","severity":1,"message":"132","line":4,"column":23,"nodeType":"119","messageId":"120","endLine":4,"endColumn":28},{"ruleId":"117","severity":1,"message":"133","line":4,"column":42,"nodeType":"119","messageId":"120","endLine":4,"endColumn":47},{"ruleId":"117","severity":1,"message":"134","line":61,"column":11,"nodeType":"119","messageId":"120","endLine":61,"endColumn":17},{"ruleId":"117","severity":1,"message":"135","line":65,"column":11,"nodeType":"119","messageId":"120","endLine":65,"endColumn":21},{"ruleId":"136","severity":1,"message":"137","line":23,"column":34,"nodeType":"138","endLine":23,"endColumn":36,"suggestions":"139"},{"ruleId":"128","severity":1,"message":"140","line":46,"column":13,"nodeType":"130","endLine":46,"endColumn":67},{"ruleId":"141","severity":1,"message":"142","line":72,"column":29,"nodeType":"143","messageId":"144","endLine":72,"endColumn":49},{"ruleId":"141","severity":1,"message":"142","line":103,"column":29,"nodeType":"143","messageId":"144","endLine":103,"endColumn":49},{"ruleId":"117","severity":1,"message":"145","line":6,"column":3,"nodeType":"119","messageId":"120","endLine":6,"endColumn":8},{"ruleId":"117","severity":1,"message":"146","line":2,"column":24,"nodeType":"119","messageId":"120","endLine":2,"endColumn":34},{"ruleId":"117","severity":1,"message":"147","line":7,"column":17,"nodeType":"119","messageId":"120","endLine":7,"endColumn":24},{"ruleId":"117","severity":1,"message":"148","line":7,"column":26,"nodeType":"119","messageId":"120","endLine":7,"endColumn":32},{"ruleId":"117","severity":1,"message":"149","line":2,"column":18,"nodeType":"119","messageId":"120","endLine":2,"endColumn":22},{"ruleId":"117","severity":1,"message":"146","line":2,"column":24,"nodeType":"119","messageId":"120","endLine":2,"endColumn":34},{"ruleId":"117","severity":1,"message":"150","line":7,"column":9,"nodeType":"119","messageId":"120","endLine":7,"endColumn":15},{"ruleId":"117","severity":1,"message":"147","line":7,"column":17,"nodeType":"119","messageId":"120","endLine":7,"endColumn":24},{"ruleId":"117","severity":1,"message":"151","line":2,"column":23,"nodeType":"119","messageId":"120","endLine":2,"endColumn":34},{"ruleId":"152","severity":1,"message":"153","line":28,"column":5,"nodeType":"154","endLine":28,"endColumn":15},{"ruleId":"155","severity":1,"message":"156","line":70,"column":17,"nodeType":"157","messageId":"158","endLine":70,"endColumn":40},{"ruleId":"155","severity":1,"message":"156","line":72,"column":17,"nodeType":"157","messageId":"158","endLine":72,"endColumn":50},{"ruleId":"117","severity":1,"message":"151","line":2,"column":23,"nodeType":"119","messageId":"120","endLine":2,"endColumn":34},{"ruleId":"152","severity":1,"message":"153","line":27,"column":5,"nodeType":"154","endLine":27,"endColumn":15},{"ruleId":"155","severity":1,"message":"156","line":69,"column":17,"nodeType":"157","messageId":"158","endLine":69,"endColumn":40},{"ruleId":"155","severity":1,"message":"156","line":71,"column":17,"nodeType":"157","messageId":"158","endLine":71,"endColumn":50},"no-unused-vars","'NavBar' is defined but never used.","Identifier","unusedVar","no-native-reassign",["159"],"no-negated-in-lhs",["160"],"'css1' is assigned a value but never used.","'css2' is assigned a value but never used.","'css3' is assigned a value but never used.","react/jsx-pascal-case","Imported JSX component Data_passed_file must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","'Alert' is defined but never used.","'Space' is defined but never used.","'Input' is defined but never used.","'layout' is assigned a value but never used.","'tailLayout' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'loadData'. Either include it or remove the dependency array.","ArrayExpression",["161"],"Imported JSX component New_balance must be in PascalCase or SCREAMING_SNAKE_CASE","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","'Radio' is defined but never used.","'Breadcrumb' is defined but never used.","'Content' is assigned a value but never used.","'Footer' is assigned a value but never used.","'Menu' is defined but never used.","'Header' is assigned a value but never used.","'InputNumber' is defined but never used.","react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression","no-template-curly-in-string","Unexpected template string expression.","Literal","unexpectedTemplateExpression","no-global-assign","no-unsafe-negation",{"desc":"162","fix":"163"},"Update the dependencies array to be: [loadData]",{"range":"164","text":"165"},[722,724],"[loadData]"]